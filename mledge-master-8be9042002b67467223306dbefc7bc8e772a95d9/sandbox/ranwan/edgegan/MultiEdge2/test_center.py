import argparse
import numpy as np
import tensorflow as tf
from EdgeNode import EdgeNode
from CentralNode import CentralNode
import coloredlogs
import logging

RECORD_FILE_PREFIX = '/home2/ryang2/mledge/sandbox/ryang2/edgeGAN/record'

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-bz', '--batch_size', type=int, default=200,
                        help='The batch size, 100 by default.')
    parser.add_argument('-eid', '--edge_ids', type=str, nargs='+',
                        default=['0', '1', '2', '3', '4', '5'],
                        help='list of ids')
    parser.add_argument('-type', '--image_type', type=str, default='mnist',
                        choices=['mnist', 'imageNet'],
                        help='The type of input images, MNIST by default.')
    parser.add_argument('-dir', '--graph_dir', type=str, default='./graph',
                        help='The root directory of the input graph,')
    parser.add_argument('-max_c', '--max_center_epoch', type=int, default=100,
                        help='Maximal epoch number that Center node runs, 100 by default.')
    parser.add_argument('-clr', '--center_learning_rate', type=float, default=0.0001,
                        help='The learning rate of the central classifier')
    parser.add_argument('-ng', '--num_generated_images', type=int, default=100,
                        help='In each epoch, the number of fake images generated by one edge.')
    parser.add_argument('-t', '--record_time', type=int, default=0,
                        help='Choose the record time that the center want to use. 0 by default.')
    parser.add_argument('-d', '--debug', type=str, default='False',
                        help='whether print debug info')
    parser.add_argument('-rp', '--record_path_prefix', type=str,
                        default='/home2/ryang2/mledge/sandbox/ryang2/edgeGAN/record',
                        help='The path prefix for recording the model.')

    args = parser.parse_args()

    if args.debug is 'False':
        coloredlogs.install(level='INFO')
    else:
        coloredlogs.install(level='DEBUG')

    print '========BEGIN SESSION========='
    center = CentralNode(args.graph_dir, args.image_type,
                         args.batch_size, True, args.record_path_prefix, 1000,
                         args.edge_ids, args.record_time, args.center_learning_rate)
    print '==========Construction finished============'

    center.initialize()
    print '==========Initialization finished ========='

    center.train(args.max_center_epoch)
    print '========== Train finished ========='

    # # center.save_model(RECORD_FILE_PREFIX, '0')
    # print '========== Save Mode finished =============='
    #
    # # center.restore_model(RECORD_FILE_PREFIX, '0')
    # print '========== Restore Mode finished =============='
